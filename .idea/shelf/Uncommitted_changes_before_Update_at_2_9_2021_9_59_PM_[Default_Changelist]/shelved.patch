Index: app/src/main/java/com/example/flixster/models/Movie.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.flixster.models;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Movie {\r\n\r\n    String backdropPath;\r\n    String posterPath;\r\n    String title;\r\n    String overview;\r\n\r\n    public Movie(JSONObject jsonObject) throws JSONException {\r\n        backdropPath = jsonObject.getString(\"backdrop_path\");\r\n        posterPath = jsonObject.getString(\"poster_path\");\r\n        title = jsonObject.getString(\"title\");\r\n        overview = jsonObject.getString(\"overview\");\r\n    }\r\n\r\n    public static List<Movie> fromJsonArray(JSONArray movieJsonArray) throws JSONException {\r\n        List<Movie> movies = new ArrayList<>();\r\n        for (int i = 0; i < movieJsonArray.length(); i++) {\r\n            movies.add(new Movie(movieJsonArray.getJSONObject(i)));\r\n        }\r\n        return movies;\r\n    }\r\n\r\n    public String getPosterPath() {\r\n        return String.format(\"https://image.tmdb.org/t/p/w185/%s\", posterPath);\r\n    }\r\n\r\n    public String getBackdropPath() {\r\n        return String.format(\"https://image.tmdb.org/t/p/w300/%s\", backdropPath);\r\n    }\r\n\r\n    public String getTitle() {\r\n        return title;\r\n    }\r\n\r\n    public String getOverview() {\r\n        return overview;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/flixster/models/Movie.java	(revision bd5a57f7826c9b8da33e32264e7b94d431d8fa14)
+++ app/src/main/java/com/example/flixster/models/Movie.java	(date 1612649065844)
@@ -3,22 +3,30 @@
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
+import org.parceler.Parcel;
 
 import java.util.ArrayList;
 import java.util.List;
 
+@Parcel
 public class Movie {
-
+    int movieId;
     String backdropPath;
     String posterPath;
     String title;
     String overview;
+    double rating;
+
+    // empty constructor needed by the Parceler library
+    public Movie() {}
 
     public Movie(JSONObject jsonObject) throws JSONException {
         backdropPath = jsonObject.getString("backdrop_path");
         posterPath = jsonObject.getString("poster_path");
         title = jsonObject.getString("title");
         overview = jsonObject.getString("overview");
+        rating = jsonObject.getDouble("vote_average");
+        movieId = jsonObject.getInt("id");
     }
 
     public static List<Movie> fromJsonArray(JSONArray movieJsonArray) throws JSONException {
@@ -44,4 +52,8 @@
     public String getOverview() {
         return overview;
     }
+
+    public double getRating() { return rating; }
+
+    public int getMovieId() { return movieId; }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/flixster/adapters/MovieAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.flixster.adapters;\r\n\r\nimport android.content.Context;\r\nimport android.content.res.Configuration;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.example.flixster.R;\r\nimport com.example.flixster.models.Movie;\r\n\r\nimport org.w3c.dom.Text;\r\n\r\nimport java.util.List;\r\n\r\npublic class MovieAdapter extends RecyclerView.Adapter<MovieAdapter.ViewHolder> {\r\n\r\n    Context context;\r\n    List<Movie> movies;\r\n\r\n    public MovieAdapter(Context context, List<Movie> movies) {\r\n        this.context = context;\r\n        this.movies = movies;\r\n    }\r\n\r\n    // Usually involves inflating a layout from XML and returning the holder\r\n    @NonNull\r\n    @Override\r\n    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        Log.d(\"MovieAdapter\", \"onCreateViewHolder\");\r\n        View movieView = LayoutInflater.from(context).inflate(R.layout.item_movie, parent, false);\r\n        return new ViewHolder(movieView);\r\n    }\r\n\r\n    // Involves populating data into the item through holder\r\n    @Override\r\n    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {\r\n        Log.d(\"MovieAdapter\", \"onBindViewHolder \" + position);\r\n        // Get the movie at the passed in position\r\n        Movie movie = movies.get(position);\r\n        // Bind the movie data into the VH\r\n        holder.bind(movie);\r\n    }\r\n\r\n    // Returns the total count of items in the list\r\n    @Override\r\n    public int getItemCount() {\r\n        return movies.size();\r\n    }\r\n\r\n    public class ViewHolder extends RecyclerView.ViewHolder {\r\n\r\n        TextView tvTitle;\r\n        TextView tvOverview;\r\n        ImageView ivPoster;\r\n\r\n        public ViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            tvTitle = itemView.findViewById(R.id.tvTitle);\r\n            tvOverview = itemView.findViewById(R.id.tvOverview);\r\n            ivPoster = itemView.findViewById(R.id.ivPoster);\r\n\r\n        }\r\n\r\n        public void bind(Movie movie) {\r\n            tvTitle.setText(movie.getTitle());\r\n            tvOverview.setText(movie.getOverview());\r\n            String imageUrl;\r\n            // If phone is in landscape, then we want to set imageurl to backdrop\r\n            if (context.getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE) {\r\n                imageUrl = movie.getBackdropPath();\r\n            }\r\n            // Else, go to default (poster)\r\n            else {\r\n                imageUrl = movie.getPosterPath();\r\n            }\r\n\r\n\r\n            Glide.with(context).load(imageUrl).into(ivPoster);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/flixster/adapters/MovieAdapter.java	(revision bd5a57f7826c9b8da33e32264e7b94d431d8fa14)
+++ app/src/main/java/com/example/flixster/adapters/MovieAdapter.java	(date 1612641542627)
@@ -1,21 +1,26 @@
 package com.example.flixster.adapters;
 
 import android.content.Context;
+import android.content.Intent;
 import android.content.res.Configuration;
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ImageView;
+import android.widget.RelativeLayout;
 import android.widget.TextView;
+import android.widget.Toast;
 
 import androidx.annotation.NonNull;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.bumptech.glide.Glide;
+import com.example.flixster.DetailActivity;
 import com.example.flixster.R;
 import com.example.flixster.models.Movie;
 
+import org.parceler.Parcels;
 import org.w3c.dom.Text;
 
 import java.util.List;
@@ -57,6 +62,7 @@
 
     public class ViewHolder extends RecyclerView.ViewHolder {
 
+        RelativeLayout container;
         TextView tvTitle;
         TextView tvOverview;
         ImageView ivPoster;
@@ -66,7 +72,7 @@
             tvTitle = itemView.findViewById(R.id.tvTitle);
             tvOverview = itemView.findViewById(R.id.tvOverview);
             ivPoster = itemView.findViewById(R.id.ivPoster);
-
+            container = itemView.findViewById(R.id.container);
         }
 
         public void bind(Movie movie) {
@@ -82,8 +88,18 @@
                 imageUrl = movie.getPosterPath();
             }
 
-
             Glide.with(context).load(imageUrl).into(ivPoster);
-        }
-    }
+
+            // 1. Register click listener on the whole row
+            container.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    // 2. Navigate to a new activity on tap
+                    Intent i = new Intent(context, DetailActivity.class);
+                    i.putExtra("movie", Parcels.wrap(movie));
+                    context.startActivity(i);
+                }
+            });
+            }
+        }
 }
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n}\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.3\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.flixster\"\r\n        minSdkVersion 21\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    testImplementation 'junit:junit:4.+'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n\r\n    implementation 'com.codepath.libraries:asynchttpclient:2.0.0'\r\n\r\n    implementation 'com.github.bumptech.glide:glide:4.11.0'\r\n    // Glide v4 uses this new annotation processor -- see https://bumptech.github.io/glide/doc/generatedapi.html\r\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision bd5a57f7826c9b8da33e32264e7b94d431d8fa14)
+++ app/build.gradle	(date 1612649319085)
@@ -3,13 +3,13 @@
 }
 
 android {
-    compileSdkVersion 30
+    compileSdkVersion 29
     buildToolsVersion "30.0.3"
 
     defaultConfig {
         applicationId "com.example.flixster"
         minSdkVersion 21
-        targetSdkVersion 30
+        targetSdkVersion 29
         versionCode 1
         versionName "1.0"
 
@@ -33,6 +33,7 @@
     implementation 'androidx.appcompat:appcompat:1.2.0'
     implementation 'com.google.android.material:material:1.2.1'
     implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
+    implementation files('libs\\YouTubeAndroidPlayerApi.jar')
     testImplementation 'junit:junit:4.+'
     androidTestImplementation 'androidx.test.ext:junit:1.1.2'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
@@ -42,4 +43,7 @@
     implementation 'com.github.bumptech.glide:glide:4.11.0'
     // Glide v4 uses this new annotation processor -- see https://bumptech.github.io/glide/doc/generatedapi.html
     annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
+
+    implementation 'org.parceler:parceler-api:1.1.12'
+    annotationProcessor 'org.parceler:parceler:1.1.12'
 }
\ No newline at end of file
Index: app/src/main/res/layout/item_movie.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\">\r\n\r\n    <ImageView\r\n        android:id=\"@+id/ivPoster\"\r\n        android:layout_width=\"120dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"0dp\"\r\n        android:layout_marginTop=\"0dp\"\r\n        tools:srcCompat=\"@tools:sample/avatars\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/tvTitle\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentTop=\"true\"\r\n        android:layout_marginStart=\"5dp\"\r\n        android:layout_toEndOf=\"@+id/ivPoster\"\r\n        android:textSize=\"24sp\"\r\n        tools:text=\"Wonder Woman 1984\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/tvOverview\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"85dp\"\r\n        android:layout_below=\"@+id/tvTitle\"\r\n        android:layout_alignParentEnd=\"true\"\r\n        android:layout_marginStart=\"5dp\"\r\n        android:layout_marginTop=\"5dp\"\r\n        android:layout_marginEnd=\"0dp\"\r\n        android:layout_toEndOf=\"@+id/ivPoster\"\r\n        tools:text=\"Wonder Woman comes into conflict with the Soviet Union during the Cold War in the 1980s and finds a formidable foe by the name of the Cheetah.\" />\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/item_movie.xml	(revision bd5a57f7826c9b8da33e32264e7b94d431d8fa14)
+++ app/src/main/res/layout/item_movie.xml	(date 1612639757294)
@@ -2,6 +2,7 @@
 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/container"
     android:layout_width="match_parent"
     android:layout_height="wrap_content">
 
Index: app/src/main/res/layout/activity_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_detail.xml	(date 1612647056498)
+++ app/src/main/res/layout/activity_detail.xml	(date 1612647056498)
@@ -0,0 +1,36 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    tools:context=".DetailActivity"
+    tools:ignore="ExtraText">
+
+    <com.google.android.youtube.player.YouTubePlayerView
+        android:id="@+id/player"
+        android:layout_width="match_parent"
+        android:layout_height="250dp" />
+
+    <TextView
+        android:id="@+id/tvTitle"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="Wonder Woman 1984"
+        android:textSize="30sp" />
+
+    <RatingBar
+        android:id="@+id/ratingBar"
+        style="@style/Widget.AppCompat.RatingBar.Indicator"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:isIndicator="true"
+        android:numStars="10"
+        android:rating="8.5" />
+
+    <TextView
+        android:id="@+id/tvOverview"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="Wonder Woman comes into conflict with the Soviet Union during the Cold War in the 1980s and finds a formidable foe by the name of the Cheetah." />
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.flixster\">\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.Flixster\">\r\n        <activity android:name=\".MainActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision bd5a57f7826c9b8da33e32264e7b94d431d8fa14)
+++ app/src/main/AndroidManifest.xml	(date 1612639833578)
@@ -11,6 +11,7 @@
         android:roundIcon="@mipmap/ic_launcher_round"
         android:supportsRtl="true"
         android:theme="@style/Theme.Flixster">
+        <activity android:name=".DetailActivity"></activity>
         <activity android:name=".MainActivity">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
Index: app/src/main/res/layout-land/item_movie.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\">\r\n\r\n    <ImageView\r\n        android:id=\"@+id/ivPoster\"\r\n        android:layout_width=\"350dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"0dp\"\r\n        android:layout_marginTop=\"0dp\"\r\n        tools:srcCompat=\"@tools:sample/avatars\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/tvTitle\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentTop=\"true\"\r\n        android:layout_marginStart=\"5dp\"\r\n        android:layout_toEndOf=\"@+id/ivPoster\"\r\n        android:textSize=\"24sp\"\r\n        tools:text=\"Wonder Woman 1984\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/tvOverview\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"85dp\"\r\n        android:layout_below=\"@+id/tvTitle\"\r\n        android:layout_alignParentEnd=\"true\"\r\n        android:layout_marginStart=\"5dp\"\r\n        android:layout_marginTop=\"5dp\"\r\n        android:layout_marginEnd=\"0dp\"\r\n        android:layout_toEndOf=\"@+id/ivPoster\"\r\n        tools:text=\"Wonder Woman comes into conflict with the Soviet Union during the Cold War in the 1980s and finds a formidable foe by the name of the Cheetah.\" />\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/item_movie.xml	(revision bd5a57f7826c9b8da33e32264e7b94d431d8fa14)
+++ app/src/main/res/layout-land/item_movie.xml	(date 1612639634257)
@@ -2,6 +2,7 @@
 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/container"
     android:layout_width="match_parent"
     android:layout_height="wrap_content">
 
Index: app/src/main/java/com/example/flixster/DetailActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/flixster/DetailActivity.java	(date 1612649089335)
+++ app/src/main/java/com/example/flixster/DetailActivity.java	(date 1612649089335)
@@ -0,0 +1,90 @@
+package com.example.flixster;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import android.os.Bundle;
+import android.util.Log;
+import android.widget.RatingBar;
+import android.widget.TextView;
+
+import com.codepath.asynchttpclient.AsyncHttpClient;
+import com.codepath.asynchttpclient.callback.JsonHttpResponseHandler;
+import com.example.flixster.models.Movie;
+import com.google.android.youtube.player.YouTubeBaseActivity;
+import com.google.android.youtube.player.YouTubeInitializationResult;
+import com.google.android.youtube.player.YouTubePlayer;
+import com.google.android.youtube.player.YouTubePlayerView;
+import com.google.android.youtube.player.YouTubeThumbnailLoader;
+import com.google.android.youtube.player.YouTubeThumbnailView;
+import com.google.android.youtube.player.YouTubeThumbnailView.OnInitializedListener;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.parceler.Parcels;
+
+import okhttp3.Headers;
+
+public class DetailActivity extends YouTubeBaseActivity {
+
+    public static final String YOUTUBE_API_KEY = "AIzaSyCsnUswnfjpT-arfbxg0aYi4XehvNziwjk";
+    public static final String VIDEOS_URL = "https://api.themoviedb.org/3/movie/%d/videos?api_key=a07e22bc18f5cb106bfe4cc1f83ad8ed";
+    
+
+    TextView tvTitle;
+    TextView tvOverview;
+    RatingBar ratingBar;
+    YouTubePlayerView youTubePlayerView;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_detail);
+        tvTitle = findViewById(R.id.tvTitle);
+        tvOverview = findViewById(R.id.tvOverview);
+        ratingBar = findViewById(R.id.ratingBar);
+        youTubePlayerView = findViewById(R.id.player);
+
+        Movie movie = Parcels.unwrap(getIntent().getParcelableExtra("movie"));
+        tvTitle.setText(movie.getTitle());
+        tvOverview.setText(movie.getOverview());
+        ratingBar.setRating((float) movie.getRating());
+
+        AsyncHttpClient client = new AsyncHttpClient();
+        client.get(String.format(VIDEOS_URL, movie.getMovieId()), new JsonHttpResponseHandler() {
+            @Override
+            public void onSuccess(int i, Headers headers, JSON json) {
+                try {
+                    JSONArray results = json.jsonObject.getJSONArray("results");
+                    if (results.length() == 0) {
+                        return;
+                    }
+                    String youtubeKey = results.getJSONObject(0).getString("key");
+                    Log.d("Detail activity", youtubeKey);
+                    initializeYoutube(youtubeKey);
+                } catch (JSONException e) {
+                    Log.e("DetailActivity", "Failed to pase JSON", e);
+                }
+            }
+
+            private void initializeYoutube(final String youtubeKey) {
+                youTubePlayerView.initialize(YOUTUBE_API_KEY, new YouTubePlayer.OnInitializedListener() {
+                    @Override
+                    public void onInitializationSuccess(YouTubePlayer.Provider provider, YouTubePlayer youTubePlayer, boolean b) {
+                        Log.d("DetailActivity", "onInitializationSuccess");
+                        youTubePlayer.cueVideo(youtubeKey);
+                    }
+
+                    @Override
+                    public void onInitializationFailure(YouTubePlayer.Provider provider, YouTubeInitializationResult youTubeInitializationResult) {
+                        Log.d("DetailActivity", "onInitializationFailure");
+                    }
+                });
+            }
+
+            @Override
+            public void onFailure(int i, Headers headers, String s, Throwable throwable) {
+
+            }
+        });
+    }
+}
\ No newline at end of file
